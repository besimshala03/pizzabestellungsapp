<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-07-01" filename="main_page.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.84210527" lines-covered="48" lines-valid="57" package="screen" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>// import 'dart:html';</code>
        </line>
        <line number="2">
            <code/>
        </line>
        <line number="3">
            <code>import 'package:flutter/material.dart';</code>
        </line>
        <line number="4">
            <code>import 'package:project_10_frontend/backend/backend.dart';</code>
        </line>
        <line number="5">
            <code>import 'package:project_10_frontend/model/Bestellung.dart';</code>
        </line>
        <line number="6">
            <code>import 'package:http/http.dart' as http;</code>
        </line>
        <line number="7">
            <code>import 'package:project_10_frontend/screen/item_uebersicht_page.dart';</code>
        </line>
        <line number="8">
            <code>import 'package:project_10_frontend/screen/edit_item_page.dart';</code>
        </line>
        <line number="9">
            <code/>
        </line>
        <line number="10">
            <code>class MainPage extends StatefulWidget {</code>
        </line>
        <line number="11">
            <code>  final Backend _backend;</code>
        </line>
        <line number="12">
            <code>  final http.Client _client;</code>
        </line>
        <line number="13">
            <code/>
        </line>
        <line number="14">
            <code/>
        </line>
        <line hits="1" number="15">
            <code>  MainPage(this._backend, this._client);</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="16">
            <code/>
        </line>
        <line hits="1" number="17">
            <code>  @override</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="18">
            <code>  State&lt;MainPage&gt; createState() =&gt; _MainPageState();</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="19">
            <code>}</code>
        </line>
        <line number="20">
            <code/>
        </line>
        <line number="21">
            <code>class _MainPageState extends State&lt;MainPage&gt; {</code>
        </line>
        <line number="22">
            <code>  late Future&lt;List&lt;Bestellung&gt;&gt; _bestellungenFuture;</code>
        </line>
        <line number="23">
            <code/>
        </line>
        <line hits="1" number="24">
            <code>  @override</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="25">
            <code>  void initState() {</code>
        </line>
        <line hits="1" number="26">
            <code>    super.initState();</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="27">
            <code>    _bestellungenFuture = _loadBestellungen();</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="28">
            <code>  }</code>
        </line>
        <line number="29">
            <code/>
        </line>
        <line hits="1" number="30">
            <code>  Future&lt;List&lt;Bestellung&gt;&gt; _loadBestellungen() async {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="31">
            <code>    try {</code>
        </line>
        <line hits="5" number="32">
            <code>      final bestellungen = await widget._backend.fetchBestellungList(widget._client);</code>
            <hit count="5" name="&lt;unnamed&gt;"/>
        </line>
        <line number="33">
            <code>      return bestellungen;</code>
        </line>
        <line number="34">
            <code>    } catch (e) {</code>
        </line>
        <line hits="2" number="35">
            <code>      print('Fehler beim Laden der Bestellungen: $e');</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="36">
            <code>      return [];</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="37">
            <code>    }</code>
        </line>
        <line number="38">
            <code>  }</code>
        </line>
        <line number="39">
            <code/>
        </line>
        <line hits="1" number="40">
            <code>  @override</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="41">
            <code>  Widget build(BuildContext context) {</code>
        </line>
        <line hits="1" number="42">
            <code>    return Scaffold(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="43">
            <code>      appBar: AppBar(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="44">
            <code>        automaticallyImplyLeading: false,</code>
        </line>
        <line hits="1" number="45">
            <code>        title: Text('BestellÃ¼bersicht'),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="46">
            <code>      ),</code>
        </line>
        <line hits="1" number="47">
            <code>      body: FutureBuilder&lt;List&lt;Bestellung&gt;&gt;(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="48">
            <code>        future: _bestellungenFuture,</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="49">
            <code>        builder: (context, snapshot) {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="50">
            <code>          if (snapshot.connectionState == ConnectionState.waiting) {</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="51">
            <code>            return Center(child: CircularProgressIndicator());</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="52">
            <code>          } else if (snapshot.hasError) {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="0" number="53">
            <code>            return Center(child: Text('Fehler: ${snapshot.error}'));</code>
        </line>
        <line hits="3" number="54">
            <code>          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {</code>
            <hit count="3" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="55">
            <code>            return Center(child: Text('Keine Bestellungen vorhanden'));</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="56">
            <code>          } else {</code>
        </line>
        <line hits="1" number="57">
            <code>            return ListView.builder(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="58">
            <code>              itemCount: snapshot.data!.length,</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="59">
            <code>              itemBuilder: (context, index) {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="60">
            <code>                final bestellung = snapshot.data![index];</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="61">
            <code>                return Card(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="62">
            <code>                  child: ListTile(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="3" number="63">
            <code>                    title: Text('Bestellung ${bestellung.id}'),</code>
            <hit count="3" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="64">
            <code>                    subtitle: Column(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="65">
            <code>                      crossAxisAlignment: CrossAxisAlignment.start,</code>
        </line>
        <line hits="1" number="66">
            <code>                      children: [</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="4" number="67">
            <code>                        Text('Anzahl Pizzen: ${bestellung.pizza.length}'),</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="4" number="68">
            <code>                        Text('Anzahl GetrÃ¤nke: ${bestellung.getraenke.length}'),</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="4" number="69">
            <code>                        Text('Gesamtpreis: ${bestellung.preis.toStringAsFixed(2)} â‚¬'),</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line number="70">
            <code>                      ],</code>
        </line>
        <line number="71">
            <code>                    ),</code>
        </line>
        <line hits="1" number="72">
            <code>                    trailing: Row(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="73">
            <code>                      mainAxisSize: MainAxisSize.min,</code>
        </line>
        <line hits="1" number="74">
            <code>                      children: [</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="75">
            <code>                        IconButton(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="76">
            <code>                          icon: Icon(Icons.edit),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="0" number="77">
            <code>                          onPressed: () {</code>
        </line>
        <line hits="0" number="78">
            <code>                            Navigator.push(</code>
        </line>
        <line number="79">
            <code>                              context,</code>
        </line>
        <line hits="0" number="80">
            <code>                              MaterialPageRoute(builder: (context) =&gt; BestellungDetailsWidget(bestellungId: bestellung.id, backend: Backend(), client: widget._client)),</code>
        </line>
        <line number="81">
            <code>                            );</code>
        </line>
        <line number="82">
            <code>                          },</code>
        </line>
        <line number="83">
            <code>                        ),</code>
        </line>
        <line hits="1" number="84">
            <code>                        IconButton(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="85">
            <code>                          key: Key("Delete"),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="86">
            <code>                          icon: Icon(Icons.delete),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="87">
            <code>                          onPressed: () async {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="88">
            <code>                            try {</code>
        </line>
        <line hits="6" number="89">
            <code>                              await widget._backend.deleteBestellung(widget._client, bestellung.id);</code>
            <hit count="6" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="90">
            <code>                              setState(() {</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="91">
            <code>                                _bestellungenFuture = _loadBestellungen();</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="92">
            <code>                              });</code>
        </line>
        <line number="93">
            <code>                            } catch (e) {</code>
        </line>
        <line hits="2" number="94">
            <code>                              print('Fehler beim LÃ¶schen der Bestellung: $e');</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="95">
            <code>                            }</code>
        </line>
        <line number="96">
            <code>                          },</code>
        </line>
        <line number="97">
            <code>                        ),</code>
        </line>
        <line number="98">
            <code>                      ],</code>
        </line>
        <line number="99">
            <code>                    ),</code>
        </line>
        <line number="100">
            <code>                  ),</code>
        </line>
        <line number="101">
            <code>                );</code>
        </line>
        <line number="102">
            <code>              },</code>
        </line>
        <line number="103">
            <code>            );</code>
        </line>
        <line number="104">
            <code>          }</code>
        </line>
        <line number="105">
            <code>        },</code>
        </line>
        <line number="106">
            <code>      ),</code>
        </line>
        <line hits="1" number="107">
            <code>      floatingActionButton: FloatingActionButton(</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="108">
            <code>        tooltip: 'New',</code>
        </line>
        <line hits="0" number="109">
            <code>        onPressed: () =&gt; showDialog&lt;bool&gt;(</code>
        </line>
        <line number="110">
            <code>          context: context,</code>
        </line>
        <line hits="0" number="111">
            <code>          builder: (BuildContext context) =&gt; Dialog.fullscreen(</code>
        </line>
        <line hits="0" number="112">
            <code>            child: PizzaMenu(backend: widget._backend, client: widget._client),</code>
        </line>
        <line number="113">
            <code>          ),</code>
        </line>
        <line hits="0" number="114">
            <code>        ).then((_) =&gt; setState(() {</code>
        </line>
        <line hits="0" number="115">
            <code>          _bestellungenFuture = _loadBestellungen();</code>
        </line>
        <line number="116">
            <code>        })),</code>
        </line>
        <line hits="1" number="117">
            <code>        child: Icon(Icons.add),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="118">
            <code>      ),</code>
        </line>
        <line number="119">
            <code>    );</code>
        </line>
        <line number="120">
            <code>  }</code>
        </line>
        <line number="121">
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../"/>
    <base href="../"/>
</coverage>
