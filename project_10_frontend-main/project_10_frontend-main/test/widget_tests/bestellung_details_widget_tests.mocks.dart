// Mocks generated by Mockito 5.4.4 from annotations
// in project_10_frontend/test/widget_tests/bestellung_details_widget_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i10;
import 'dart:typed_data' as _i11;

import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:project_10_frontend/backend/backend.dart' as _i7;
import 'package:project_10_frontend/model/Bestellung.dart' as _i5;
import 'package:project_10_frontend/model/getraenke.dart' as _i4;
import 'package:project_10_frontend/model/pizza.dart' as _i2;
import 'package:project_10_frontend/model/zutaten.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePizza_0 extends _i1.SmartFake implements _i2.Pizza {
  _FakePizza_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeZutaten_1 extends _i1.SmartFake implements _i3.Zutaten {
  _FakeZutaten_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetraenke_2 extends _i1.SmartFake implements _i4.Getraenke {
  _FakeGetraenke_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBestellung_3 extends _i1.SmartFake implements _i5.Bestellung {
  _FakeBestellung_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_5 extends _i1.SmartFake
    implements _i6.StreamedResponse {
  _FakeStreamedResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Backend].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackend extends _i1.Mock implements _i7.Backend {
  MockBackend() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Pizza> createPizza(
    _i6.Client? client,
    String? name,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPizza,
          [
            client,
            name,
            description,
          ],
        ),
        returnValue: _i8.Future<_i2.Pizza>.value(_FakePizza_0(
          this,
          Invocation.method(
            #createPizza,
            [
              client,
              name,
              description,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Pizza>);

  @override
  _i8.Future<List<_i2.Pizza>> fetchPizzaList(_i6.Client? client) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPizzaList,
          [client],
        ),
        returnValue: _i8.Future<List<_i2.Pizza>>.value(<_i2.Pizza>[]),
      ) as _i8.Future<List<_i2.Pizza>>);

  @override
  _i8.Future<_i2.Pizza> fetchPizzaById(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPizzaById,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<_i2.Pizza>.value(_FakePizza_0(
          this,
          Invocation.method(
            #fetchPizzaById,
            [
              client,
              id,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Pizza>);

  @override
  _i8.Future<List<_i3.Zutaten>> fetchZutatenData(_i6.Client? client) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZutatenData,
          [client],
        ),
        returnValue: _i8.Future<List<_i3.Zutaten>>.value(<_i3.Zutaten>[]),
      ) as _i8.Future<List<_i3.Zutaten>>);

  @override
  _i8.Future<_i3.Zutaten> fetchZutatById(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZutatById,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<_i3.Zutaten>.value(_FakeZutaten_1(
          this,
          Invocation.method(
            #fetchZutatById,
            [
              client,
              id,
            ],
          ),
        )),
      ) as _i8.Future<_i3.Zutaten>);

  @override
  _i8.Future<List<_i4.Getraenke>> fetchGetraenkeData(_i6.Client? client) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGetraenkeData,
          [client],
        ),
        returnValue: _i8.Future<List<_i4.Getraenke>>.value(<_i4.Getraenke>[]),
      ) as _i8.Future<List<_i4.Getraenke>>);

  @override
  _i8.Future<_i4.Getraenke> fetchGetraenkeById(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGetraenkeById,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<_i4.Getraenke>.value(_FakeGetraenke_2(
          this,
          Invocation.method(
            #fetchGetraenkeById,
            [
              client,
              id,
            ],
          ),
        )),
      ) as _i8.Future<_i4.Getraenke>);

  @override
  dynamic createItem(
    _i6.Client? client,
    String? text,
    String? text2,
  ) =>
      super.noSuchMethod(Invocation.method(
        #createItem,
        [
          client,
          text,
          text2,
        ],
      ));

  @override
  _i8.Future<void> addBestellung(
    _i6.Client? client,
    List<_i2.Pizza>? pizza,
    List<_i4.Getraenke>? getraenke,
    double? preis,
    String? datumUhrzeit,
    String? adresse,
    String? kundenname,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBestellung,
          [
            client,
            pizza,
            getraenke,
            preis,
            datumUhrzeit,
            adresse,
            kundenname,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteBestellung(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBestellung,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.Bestellung> editBestellung(
    _i6.Client? client,
    int? id,
    List<_i2.Pizza>? pizza,
    List<_i4.Getraenke>? getraenke,
    double? preis,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editBestellung,
          [
            client,
            id,
            pizza,
            getraenke,
            preis,
          ],
        ),
        returnValue: _i8.Future<_i5.Bestellung>.value(_FakeBestellung_3(
          this,
          Invocation.method(
            #editBestellung,
            [
              client,
              id,
              pizza,
              getraenke,
              preis,
            ],
          ),
        )),
      ) as _i8.Future<_i5.Bestellung>);

  @override
  _i8.Future<List<_i5.Bestellung>> fetchBestellungList(_i6.Client? client) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBestellungList,
          [client],
        ),
        returnValue: _i8.Future<List<_i5.Bestellung>>.value(<_i5.Bestellung>[]),
      ) as _i8.Future<List<_i5.Bestellung>>);

  @override
  _i8.Future<void> updateBestellung(
    _i6.Client? client,
    int? id,
    Map<String, dynamic>? bestellungDetails,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBestellung,
          [
            client,
            id,
            bestellungDetails,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.Bestellung> fetchBestellungById(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBestellungById,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<_i5.Bestellung>.value(_FakeBestellung_3(
          this,
          Invocation.method(
            #fetchBestellungById,
            [
              client,
              id,
            ],
          ),
        )),
      ) as _i8.Future<_i5.Bestellung>);

  @override
  _i8.Future<String> deletePizzaById(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePizzaById,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #deletePizzaById,
            [
              client,
              id,
            ],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<String> deleteGetraenkeById(
    _i6.Client? client,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGetraenkeById,
          [
            client,
            id,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #deleteGetraenkeById,
            [
              client,
              id,
            ],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i6.Response> updatePizzaById(
    _i6.Client? client,
    int? id,
    _i2.Pizza? pizzaDetails,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePizzaById,
          [
            client,
            id,
            pizzaDetails,
          ],
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #updatePizzaById,
            [
              client,
              id,
              pizzaDetails,
            ],
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> deleteZutatenByPizza(
    _i6.Client? client,
    _i2.Pizza? pizza,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteZutatenByPizza,
          [
            client,
            pizza,
          ],
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #deleteZutatenByPizza,
            [
              client,
              pizza,
            ],
          ),
        )),
      ) as _i8.Future<_i6.Response>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i6.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i6.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
      ) as _i8.Future<_i11.Uint8List>);

  @override
  _i8.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i8.Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_5(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i8.Future<_i6.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
